# Seq2Seq Model Architecture
# - Apply `corpus_bleu.SmoothingFunction().method1` smoothing function to BLEU score calculation
# - Beam search is computationally expensive. Therefore, run `predicy_sequence()` method during validation to reduce
#   computational overhead during training and only use beam search during testing at end of training.
# - Run full model training run with Liu et al. hyperparameters and monitor unthrottled test performance metrics.
#
# Training run metrics:
#   - Epochs: 50
#
#   - Train Loss (Smoothed):
#   - Train Accuracy (Smoothed):
#   - Train Perplexity (Smoothed):
#
#   - Validation Loss (Smoothed):
#   - Validation Accuracy (Smoothed):
#   - Validation Perplexity (Smoothed):
#   - Validation BLEU Score (Smoothed):
#
#   - Test Loss (Smoothed):
#   - Test Accuracy (Smoothed):
#   - Test Perplexity (Smoothed):
#   - Test BLEU Score (Smoothed):
#
# Training Performance Evaluation
# 1. Training vs Validation Accuracy, Loss, Perplexity and BLEU Score:
#     - Train Accuracy:
#     - Validation Accuracy:
#     - Difference:
#
#     - Train Loss:
#     - Validation Loss:
#     - Difference:
#
#     - Train Perplexity:
#     - Validation Perplexity:
#     - Difference:
#
#
# 2. Validation vs Testing Accuracy, Loss, Perplexity and BLEU Score:
#   - Validation Accuracy:
#   - Testing Accuracy:
#   - Difference:
#
#   - Validation Loss:
#   - Testing Loss:
#   - Difference:
#
#   - Validation Perplexity:
#   - Testing Perplexity:
#   - Difference:
#
#   - Validation BLEU Score:
#   - Testing BLEU Score:
#   - Difference:
#

# Data Configuration and Hyperparameters
data:
  products_file: 'data/preprocessed/liu-et-al/products_smiles'
  reactants_file: 'data/preprocessed/liu-et-al/reactants_smiles'
  products_valid_file: 'data/preprocessed/liu-et-al/validation_products_smiles'
  reactants_valid_file: 'data/preprocessed/liu-et-al/validation_reactants_smiles'
  tokenizer_save_path: 'data/training/liu-et-al/model-v17
  /tokenizer/model_v17
  _tokenizer.json'
  max_encoder_seq_length: 140
  max_decoder_seq_length: 140
  batch_size: 32
  test_size: 0.3
  random_state: 4

# Model Configuration and Hyperparameters
model:
  input_vocab_size: null  # To be set dynamically based on tokenizer
  output_vocab_size: null  # To be set dynamically based on tokenizer
  attention_dim: 256
  encoder_embedding_dim: 128
  decoder_embedding_dim: 256
  units: 256
  encoder_num_layers: 2
  decoder_num_layers: 4
  beam_width: 5
  weight_decay: null
  dropout_rate: 0.2
  learning_rate: 0.0001
  metrics: ['accuracy']

# Training Configuration and Hyperparameters
training:
  epochs: 5
  patience: 5
  model_save_path: 'data/training/liu-et-al/model-v17/model'
  test_metrics_dir: 'data/training/liu-et-al/model-v17/evaluate'
  log_dir: 'logs/liu-et-al/model-v17'
  checkpoint_dir: 'data/training/liu-et-al/model-v17/checkpoints'
  num_samples: null # Number of samples to use for debugging model

# Environment Configuration
env:
  determinism:
    python_seed: "44478977"
    random_seed: 440651
    numpy_seed: 110789
    tf_seed: 61592